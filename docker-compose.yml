version: "3.9"
networks:
  trading_sim:
services:
  database:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - trading_sim

  cache:
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - trading_sim

  server:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - CACHE_HOST=${CACHE_HOST}
      - CACHE_PORT=${CACHE_PORT}
      - CACHE_PASSWORD=${CACHE_PASSWORD}
      - CACHE_DB=${CACHE_DB}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - trading_sim

volumes:
  data:
  cache:
